// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## Import
 *
 * ### How to authorize connector
 */
export class FivetranConnector extends pulumi.CustomResource {
    /**
     * Get an existing FivetranConnector resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FivetranConnectorState, opts?: pulumi.CustomResourceOptions): FivetranConnector {
        return new FivetranConnector(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fivetran:index/fivetranConnector:FivetranConnector';

    /**
     * Returns true if the given object is an instance of FivetranConnector.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FivetranConnector {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FivetranConnector.__pulumiType;
    }

    public readonly auth!: pulumi.Output<outputs.FivetranConnectorAuth | undefined>;
    public readonly config!: pulumi.Output<outputs.FivetranConnectorConfig>;
    /**
     * The unique identifier of the user who has created the connector in your account
     */
    public /*out*/ readonly connectedBy!: pulumi.Output<string>;
    /**
     * The timestamp of the time the connector was created in your account
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    public readonly destinationSchema!: pulumi.Output<outputs.FivetranConnectorDestinationSchema>;
    /**
     * The unique identifier for the Group (Destination) within the Fivetran system.
     */
    public readonly groupId!: pulumi.Output<string>;
    public /*out*/ readonly lastUpdated!: pulumi.Output<string>;
    /**
     * The name used both as the connector's name within the Fivetran system and as the source schema's name within your
     * destination.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Specifies whether the setup tests should be run automatically. The default value is TRUE.
     */
    public readonly runSetupTests!: pulumi.Output<string | undefined>;
    /**
     * The connector type name within the Fivetran system.
     */
    public readonly service!: pulumi.Output<string>;
    /**
     * Specifies whether we should trust the certificate automatically. The default value is FALSE. If a certificate is not
     * trusted automatically, it has to be approved with [Certificates Management API Approve a destination
     * certificate](https://fivetran.com/docs/rest-api/certificates#approveadestinationcertificate).
     */
    public readonly trustCertificates!: pulumi.Output<string | undefined>;
    /**
     * Specifies whether we should trust the SSH fingerprint automatically. The default value is FALSE. If a fingerprint is not
     * trusted automatically, it has to be approved with [Certificates Management API Approve a destination
     * fingerprint](https://fivetran.com/docs/rest-api/certificates#approveadestinationfingerprint).
     */
    public readonly trustFingerprints!: pulumi.Output<string | undefined>;

    /**
     * Create a FivetranConnector resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FivetranConnectorArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FivetranConnectorArgs | FivetranConnectorState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FivetranConnectorState | undefined;
            resourceInputs["auth"] = state ? state.auth : undefined;
            resourceInputs["config"] = state ? state.config : undefined;
            resourceInputs["connectedBy"] = state ? state.connectedBy : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["destinationSchema"] = state ? state.destinationSchema : undefined;
            resourceInputs["groupId"] = state ? state.groupId : undefined;
            resourceInputs["lastUpdated"] = state ? state.lastUpdated : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["runSetupTests"] = state ? state.runSetupTests : undefined;
            resourceInputs["service"] = state ? state.service : undefined;
            resourceInputs["trustCertificates"] = state ? state.trustCertificates : undefined;
            resourceInputs["trustFingerprints"] = state ? state.trustFingerprints : undefined;
        } else {
            const args = argsOrState as FivetranConnectorArgs | undefined;
            if ((!args || args.destinationSchema === undefined) && !opts.urn) {
                throw new Error("Missing required property 'destinationSchema'");
            }
            if ((!args || args.groupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'groupId'");
            }
            if ((!args || args.service === undefined) && !opts.urn) {
                throw new Error("Missing required property 'service'");
            }
            resourceInputs["auth"] = args ? args.auth : undefined;
            resourceInputs["config"] = args ? args.config : undefined;
            resourceInputs["destinationSchema"] = args ? args.destinationSchema : undefined;
            resourceInputs["groupId"] = args ? args.groupId : undefined;
            resourceInputs["runSetupTests"] = args ? args.runSetupTests : undefined;
            resourceInputs["service"] = args ? args.service : undefined;
            resourceInputs["trustCertificates"] = args ? args.trustCertificates : undefined;
            resourceInputs["trustFingerprints"] = args ? args.trustFingerprints : undefined;
            resourceInputs["connectedBy"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["lastUpdated"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FivetranConnector.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FivetranConnector resources.
 */
export interface FivetranConnectorState {
    auth?: pulumi.Input<inputs.FivetranConnectorAuth>;
    config?: pulumi.Input<inputs.FivetranConnectorConfig>;
    /**
     * The unique identifier of the user who has created the connector in your account
     */
    connectedBy?: pulumi.Input<string>;
    /**
     * The timestamp of the time the connector was created in your account
     */
    createdAt?: pulumi.Input<string>;
    destinationSchema?: pulumi.Input<inputs.FivetranConnectorDestinationSchema>;
    /**
     * The unique identifier for the Group (Destination) within the Fivetran system.
     */
    groupId?: pulumi.Input<string>;
    lastUpdated?: pulumi.Input<string>;
    /**
     * The name used both as the connector's name within the Fivetran system and as the source schema's name within your
     * destination.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies whether the setup tests should be run automatically. The default value is TRUE.
     */
    runSetupTests?: pulumi.Input<string>;
    /**
     * The connector type name within the Fivetran system.
     */
    service?: pulumi.Input<string>;
    /**
     * Specifies whether we should trust the certificate automatically. The default value is FALSE. If a certificate is not
     * trusted automatically, it has to be approved with [Certificates Management API Approve a destination
     * certificate](https://fivetran.com/docs/rest-api/certificates#approveadestinationcertificate).
     */
    trustCertificates?: pulumi.Input<string>;
    /**
     * Specifies whether we should trust the SSH fingerprint automatically. The default value is FALSE. If a fingerprint is not
     * trusted automatically, it has to be approved with [Certificates Management API Approve a destination
     * fingerprint](https://fivetran.com/docs/rest-api/certificates#approveadestinationfingerprint).
     */
    trustFingerprints?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FivetranConnector resource.
 */
export interface FivetranConnectorArgs {
    auth?: pulumi.Input<inputs.FivetranConnectorAuth>;
    config?: pulumi.Input<inputs.FivetranConnectorConfig>;
    destinationSchema: pulumi.Input<inputs.FivetranConnectorDestinationSchema>;
    /**
     * The unique identifier for the Group (Destination) within the Fivetran system.
     */
    groupId: pulumi.Input<string>;
    /**
     * Specifies whether the setup tests should be run automatically. The default value is TRUE.
     */
    runSetupTests?: pulumi.Input<string>;
    /**
     * The connector type name within the Fivetran system.
     */
    service: pulumi.Input<string>;
    /**
     * Specifies whether we should trust the certificate automatically. The default value is FALSE. If a certificate is not
     * trusted automatically, it has to be approved with [Certificates Management API Approve a destination
     * certificate](https://fivetran.com/docs/rest-api/certificates#approveadestinationcertificate).
     */
    trustCertificates?: pulumi.Input<string>;
    /**
     * Specifies whether we should trust the SSH fingerprint automatically. The default value is FALSE. If a fingerprint is not
     * trusted automatically, it has to be approved with [Certificates Management API Approve a destination
     * fingerprint](https://fivetran.com/docs/rest-api/certificates#approveadestinationfingerprint).
     */
    trustFingerprints?: pulumi.Input<string>;
}
