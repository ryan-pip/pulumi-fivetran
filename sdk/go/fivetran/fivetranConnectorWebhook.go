// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fivetran

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
	"github.com/ryan-pip/pulumi-fivetran/sdk/go/fivetran/internal"
)

// This resource allows you to create, update, and delete webhooks.
//
// ## Import
//
// 1. To import an existing `fivetran_webhook` resource into your Terraform state, you need to get `webhook_id`.
//
// You can retrieve all webhooks using the [fivetran_webhooks data source](/docs/data-sources/webhooks). 2. Define an empty resource in your `.tf` configurationhcl resource "fivetran_webhook" "my_imported_fivetran_webhook" { }
//
// ```sh
//
//	$ pulumi import fivetran:index/fivetranConnectorWebhook:FivetranConnectorWebhook
//
// Run the `terraform import` command
// ```
//
// ```sh
//
//	$ pulumi import fivetran:index/fivetranConnectorWebhook:FivetranConnectorWebhook my_imported_fivetran_webhook {webhook_id}
//
// ```
//
//  4. Use the `terraform state show` command to get the values from the stateterraform state show 'fivetran_webhook.my_imported_fivetran_webhook' 5. Copy the values and paste them to your `.tf` configuration.
type FivetranConnectorWebhook struct {
	pulumi.CustomResourceState

	// Boolean, if set to true, webhooks are immediately sent in response to events
	Active pulumi.BoolOutput `pulumi:"active"`
	// The webhook creation timestamp
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The ID of the user who created the webhook.
	CreatedBy pulumi.StringOutput `pulumi:"createdBy"`
	// The array of event types
	Events pulumi.StringArrayOutput `pulumi:"events"`
	// The group ID
	GroupId pulumi.StringPtrOutput `pulumi:"groupId"`
	// Specifies whether the setup tests should be run
	RunTests pulumi.BoolPtrOutput `pulumi:"runTests"`
	// The secret string used for payload signing and masked in the response.
	Secret pulumi.StringOutput `pulumi:"secret"`
	// The webhook type (group, account)
	Type pulumi.StringOutput `pulumi:"type"`
	// Your webhooks URL endpoint for your application
	Url pulumi.StringOutput `pulumi:"url"`
}

// NewFivetranConnectorWebhook registers a new resource with the given unique name, arguments, and options.
func NewFivetranConnectorWebhook(ctx *pulumi.Context,
	name string, args *FivetranConnectorWebhookArgs, opts ...pulumi.ResourceOption) (*FivetranConnectorWebhook, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Active == nil {
		return nil, errors.New("invalid value for required argument 'Active'")
	}
	if args.Events == nil {
		return nil, errors.New("invalid value for required argument 'Events'")
	}
	if args.Secret == nil {
		return nil, errors.New("invalid value for required argument 'Secret'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	if args.Url == nil {
		return nil, errors.New("invalid value for required argument 'Url'")
	}
	if args.Secret != nil {
		args.Secret = pulumi.ToSecret(args.Secret).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"secret",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FivetranConnectorWebhook
	err := ctx.RegisterResource("fivetran:index/fivetranConnectorWebhook:FivetranConnectorWebhook", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFivetranConnectorWebhook gets an existing FivetranConnectorWebhook resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFivetranConnectorWebhook(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FivetranConnectorWebhookState, opts ...pulumi.ResourceOption) (*FivetranConnectorWebhook, error) {
	var resource FivetranConnectorWebhook
	err := ctx.ReadResource("fivetran:index/fivetranConnectorWebhook:FivetranConnectorWebhook", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FivetranConnectorWebhook resources.
type fivetranConnectorWebhookState struct {
	// Boolean, if set to true, webhooks are immediately sent in response to events
	Active *bool `pulumi:"active"`
	// The webhook creation timestamp
	CreatedAt *string `pulumi:"createdAt"`
	// The ID of the user who created the webhook.
	CreatedBy *string `pulumi:"createdBy"`
	// The array of event types
	Events []string `pulumi:"events"`
	// The group ID
	GroupId *string `pulumi:"groupId"`
	// Specifies whether the setup tests should be run
	RunTests *bool `pulumi:"runTests"`
	// The secret string used for payload signing and masked in the response.
	Secret *string `pulumi:"secret"`
	// The webhook type (group, account)
	Type *string `pulumi:"type"`
	// Your webhooks URL endpoint for your application
	Url *string `pulumi:"url"`
}

type FivetranConnectorWebhookState struct {
	// Boolean, if set to true, webhooks are immediately sent in response to events
	Active pulumi.BoolPtrInput
	// The webhook creation timestamp
	CreatedAt pulumi.StringPtrInput
	// The ID of the user who created the webhook.
	CreatedBy pulumi.StringPtrInput
	// The array of event types
	Events pulumi.StringArrayInput
	// The group ID
	GroupId pulumi.StringPtrInput
	// Specifies whether the setup tests should be run
	RunTests pulumi.BoolPtrInput
	// The secret string used for payload signing and masked in the response.
	Secret pulumi.StringPtrInput
	// The webhook type (group, account)
	Type pulumi.StringPtrInput
	// Your webhooks URL endpoint for your application
	Url pulumi.StringPtrInput
}

func (FivetranConnectorWebhookState) ElementType() reflect.Type {
	return reflect.TypeOf((*fivetranConnectorWebhookState)(nil)).Elem()
}

type fivetranConnectorWebhookArgs struct {
	// Boolean, if set to true, webhooks are immediately sent in response to events
	Active bool `pulumi:"active"`
	// The array of event types
	Events []string `pulumi:"events"`
	// The group ID
	GroupId *string `pulumi:"groupId"`
	// Specifies whether the setup tests should be run
	RunTests *bool `pulumi:"runTests"`
	// The secret string used for payload signing and masked in the response.
	Secret string `pulumi:"secret"`
	// The webhook type (group, account)
	Type string `pulumi:"type"`
	// Your webhooks URL endpoint for your application
	Url string `pulumi:"url"`
}

// The set of arguments for constructing a FivetranConnectorWebhook resource.
type FivetranConnectorWebhookArgs struct {
	// Boolean, if set to true, webhooks are immediately sent in response to events
	Active pulumi.BoolInput
	// The array of event types
	Events pulumi.StringArrayInput
	// The group ID
	GroupId pulumi.StringPtrInput
	// Specifies whether the setup tests should be run
	RunTests pulumi.BoolPtrInput
	// The secret string used for payload signing and masked in the response.
	Secret pulumi.StringInput
	// The webhook type (group, account)
	Type pulumi.StringInput
	// Your webhooks URL endpoint for your application
	Url pulumi.StringInput
}

func (FivetranConnectorWebhookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*fivetranConnectorWebhookArgs)(nil)).Elem()
}

type FivetranConnectorWebhookInput interface {
	pulumi.Input

	ToFivetranConnectorWebhookOutput() FivetranConnectorWebhookOutput
	ToFivetranConnectorWebhookOutputWithContext(ctx context.Context) FivetranConnectorWebhookOutput
}

func (*FivetranConnectorWebhook) ElementType() reflect.Type {
	return reflect.TypeOf((**FivetranConnectorWebhook)(nil)).Elem()
}

func (i *FivetranConnectorWebhook) ToFivetranConnectorWebhookOutput() FivetranConnectorWebhookOutput {
	return i.ToFivetranConnectorWebhookOutputWithContext(context.Background())
}

func (i *FivetranConnectorWebhook) ToFivetranConnectorWebhookOutputWithContext(ctx context.Context) FivetranConnectorWebhookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FivetranConnectorWebhookOutput)
}

func (i *FivetranConnectorWebhook) ToOutput(ctx context.Context) pulumix.Output[*FivetranConnectorWebhook] {
	return pulumix.Output[*FivetranConnectorWebhook]{
		OutputState: i.ToFivetranConnectorWebhookOutputWithContext(ctx).OutputState,
	}
}

// FivetranConnectorWebhookArrayInput is an input type that accepts FivetranConnectorWebhookArray and FivetranConnectorWebhookArrayOutput values.
// You can construct a concrete instance of `FivetranConnectorWebhookArrayInput` via:
//
//	FivetranConnectorWebhookArray{ FivetranConnectorWebhookArgs{...} }
type FivetranConnectorWebhookArrayInput interface {
	pulumi.Input

	ToFivetranConnectorWebhookArrayOutput() FivetranConnectorWebhookArrayOutput
	ToFivetranConnectorWebhookArrayOutputWithContext(context.Context) FivetranConnectorWebhookArrayOutput
}

type FivetranConnectorWebhookArray []FivetranConnectorWebhookInput

func (FivetranConnectorWebhookArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FivetranConnectorWebhook)(nil)).Elem()
}

func (i FivetranConnectorWebhookArray) ToFivetranConnectorWebhookArrayOutput() FivetranConnectorWebhookArrayOutput {
	return i.ToFivetranConnectorWebhookArrayOutputWithContext(context.Background())
}

func (i FivetranConnectorWebhookArray) ToFivetranConnectorWebhookArrayOutputWithContext(ctx context.Context) FivetranConnectorWebhookArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FivetranConnectorWebhookArrayOutput)
}

func (i FivetranConnectorWebhookArray) ToOutput(ctx context.Context) pulumix.Output[[]*FivetranConnectorWebhook] {
	return pulumix.Output[[]*FivetranConnectorWebhook]{
		OutputState: i.ToFivetranConnectorWebhookArrayOutputWithContext(ctx).OutputState,
	}
}

// FivetranConnectorWebhookMapInput is an input type that accepts FivetranConnectorWebhookMap and FivetranConnectorWebhookMapOutput values.
// You can construct a concrete instance of `FivetranConnectorWebhookMapInput` via:
//
//	FivetranConnectorWebhookMap{ "key": FivetranConnectorWebhookArgs{...} }
type FivetranConnectorWebhookMapInput interface {
	pulumi.Input

	ToFivetranConnectorWebhookMapOutput() FivetranConnectorWebhookMapOutput
	ToFivetranConnectorWebhookMapOutputWithContext(context.Context) FivetranConnectorWebhookMapOutput
}

type FivetranConnectorWebhookMap map[string]FivetranConnectorWebhookInput

func (FivetranConnectorWebhookMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FivetranConnectorWebhook)(nil)).Elem()
}

func (i FivetranConnectorWebhookMap) ToFivetranConnectorWebhookMapOutput() FivetranConnectorWebhookMapOutput {
	return i.ToFivetranConnectorWebhookMapOutputWithContext(context.Background())
}

func (i FivetranConnectorWebhookMap) ToFivetranConnectorWebhookMapOutputWithContext(ctx context.Context) FivetranConnectorWebhookMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FivetranConnectorWebhookMapOutput)
}

func (i FivetranConnectorWebhookMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*FivetranConnectorWebhook] {
	return pulumix.Output[map[string]*FivetranConnectorWebhook]{
		OutputState: i.ToFivetranConnectorWebhookMapOutputWithContext(ctx).OutputState,
	}
}

type FivetranConnectorWebhookOutput struct{ *pulumi.OutputState }

func (FivetranConnectorWebhookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FivetranConnectorWebhook)(nil)).Elem()
}

func (o FivetranConnectorWebhookOutput) ToFivetranConnectorWebhookOutput() FivetranConnectorWebhookOutput {
	return o
}

func (o FivetranConnectorWebhookOutput) ToFivetranConnectorWebhookOutputWithContext(ctx context.Context) FivetranConnectorWebhookOutput {
	return o
}

func (o FivetranConnectorWebhookOutput) ToOutput(ctx context.Context) pulumix.Output[*FivetranConnectorWebhook] {
	return pulumix.Output[*FivetranConnectorWebhook]{
		OutputState: o.OutputState,
	}
}

// Boolean, if set to true, webhooks are immediately sent in response to events
func (o FivetranConnectorWebhookOutput) Active() pulumi.BoolOutput {
	return o.ApplyT(func(v *FivetranConnectorWebhook) pulumi.BoolOutput { return v.Active }).(pulumi.BoolOutput)
}

// The webhook creation timestamp
func (o FivetranConnectorWebhookOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *FivetranConnectorWebhook) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The ID of the user who created the webhook.
func (o FivetranConnectorWebhookOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v *FivetranConnectorWebhook) pulumi.StringOutput { return v.CreatedBy }).(pulumi.StringOutput)
}

// The array of event types
func (o FivetranConnectorWebhookOutput) Events() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FivetranConnectorWebhook) pulumi.StringArrayOutput { return v.Events }).(pulumi.StringArrayOutput)
}

// The group ID
func (o FivetranConnectorWebhookOutput) GroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FivetranConnectorWebhook) pulumi.StringPtrOutput { return v.GroupId }).(pulumi.StringPtrOutput)
}

// Specifies whether the setup tests should be run
func (o FivetranConnectorWebhookOutput) RunTests() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FivetranConnectorWebhook) pulumi.BoolPtrOutput { return v.RunTests }).(pulumi.BoolPtrOutput)
}

// The secret string used for payload signing and masked in the response.
func (o FivetranConnectorWebhookOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v *FivetranConnectorWebhook) pulumi.StringOutput { return v.Secret }).(pulumi.StringOutput)
}

// The webhook type (group, account)
func (o FivetranConnectorWebhookOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *FivetranConnectorWebhook) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Your webhooks URL endpoint for your application
func (o FivetranConnectorWebhookOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v *FivetranConnectorWebhook) pulumi.StringOutput { return v.Url }).(pulumi.StringOutput)
}

type FivetranConnectorWebhookArrayOutput struct{ *pulumi.OutputState }

func (FivetranConnectorWebhookArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FivetranConnectorWebhook)(nil)).Elem()
}

func (o FivetranConnectorWebhookArrayOutput) ToFivetranConnectorWebhookArrayOutput() FivetranConnectorWebhookArrayOutput {
	return o
}

func (o FivetranConnectorWebhookArrayOutput) ToFivetranConnectorWebhookArrayOutputWithContext(ctx context.Context) FivetranConnectorWebhookArrayOutput {
	return o
}

func (o FivetranConnectorWebhookArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*FivetranConnectorWebhook] {
	return pulumix.Output[[]*FivetranConnectorWebhook]{
		OutputState: o.OutputState,
	}
}

func (o FivetranConnectorWebhookArrayOutput) Index(i pulumi.IntInput) FivetranConnectorWebhookOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FivetranConnectorWebhook {
		return vs[0].([]*FivetranConnectorWebhook)[vs[1].(int)]
	}).(FivetranConnectorWebhookOutput)
}

type FivetranConnectorWebhookMapOutput struct{ *pulumi.OutputState }

func (FivetranConnectorWebhookMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FivetranConnectorWebhook)(nil)).Elem()
}

func (o FivetranConnectorWebhookMapOutput) ToFivetranConnectorWebhookMapOutput() FivetranConnectorWebhookMapOutput {
	return o
}

func (o FivetranConnectorWebhookMapOutput) ToFivetranConnectorWebhookMapOutputWithContext(ctx context.Context) FivetranConnectorWebhookMapOutput {
	return o
}

func (o FivetranConnectorWebhookMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*FivetranConnectorWebhook] {
	return pulumix.Output[map[string]*FivetranConnectorWebhook]{
		OutputState: o.OutputState,
	}
}

func (o FivetranConnectorWebhookMapOutput) MapIndex(k pulumi.StringInput) FivetranConnectorWebhookOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FivetranConnectorWebhook {
		return vs[0].(map[string]*FivetranConnectorWebhook)[vs[1].(string)]
	}).(FivetranConnectorWebhookOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FivetranConnectorWebhookInput)(nil)).Elem(), &FivetranConnectorWebhook{})
	pulumi.RegisterInputType(reflect.TypeOf((*FivetranConnectorWebhookArrayInput)(nil)).Elem(), FivetranConnectorWebhookArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FivetranConnectorWebhookMapInput)(nil)).Elem(), FivetranConnectorWebhookMap{})
	pulumi.RegisterOutputType(FivetranConnectorWebhookOutput{})
	pulumi.RegisterOutputType(FivetranConnectorWebhookArrayOutput{})
	pulumi.RegisterOutputType(FivetranConnectorWebhookMapOutput{})
}
