// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fivetran

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
	"github.com/ryan-pip/pulumi-fivetran/sdk/go/fivetran/internal"
)

// This data source returns a webhook object.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/ryan-pip/pulumi-fivetran/sdk/go/fivetran"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fivetran.GetWebhook(ctx, &fivetran.GetWebhookArgs{
//				Id: "webhook_id",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetWebhook(ctx *pulumi.Context, args *GetWebhookArgs, opts ...pulumi.InvokeOption) (*GetWebhookResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetWebhookResult
	err := ctx.Invoke("fivetran:index/getWebhook:getWebhook", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getWebhook.
type GetWebhookArgs struct {
	// The webhook ID
	Id string `pulumi:"id"`
	// Specifies whether the setup tests should be run
	RunTests *bool `pulumi:"runTests"`
}

// A collection of values returned by getWebhook.
type GetWebhookResult struct {
	// Boolean, if set to true, webhooks are immediately sent in response to events
	Active bool `pulumi:"active"`
	// The webhook creation timestamp
	CreatedAt string `pulumi:"createdAt"`
	// The ID of the user who created the webhook.
	CreatedBy string `pulumi:"createdBy"`
	// The array of event types
	Events []string `pulumi:"events"`
	// The group ID
	GroupId string `pulumi:"groupId"`
	// The webhook ID
	Id string `pulumi:"id"`
	// Specifies whether the setup tests should be run
	RunTests *bool `pulumi:"runTests"`
	// The secret string used for payload signing and masked in the response.
	Secret string `pulumi:"secret"`
	// The webhook type (group, account)
	Type string `pulumi:"type"`
	// Your webhooks URL endpoint for your application
	Url string `pulumi:"url"`
}

func GetWebhookOutput(ctx *pulumi.Context, args GetWebhookOutputArgs, opts ...pulumi.InvokeOption) GetWebhookResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetWebhookResult, error) {
			args := v.(GetWebhookArgs)
			r, err := GetWebhook(ctx, &args, opts...)
			var s GetWebhookResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetWebhookResultOutput)
}

// A collection of arguments for invoking getWebhook.
type GetWebhookOutputArgs struct {
	// The webhook ID
	Id pulumi.StringInput `pulumi:"id"`
	// Specifies whether the setup tests should be run
	RunTests pulumi.BoolPtrInput `pulumi:"runTests"`
}

func (GetWebhookOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWebhookArgs)(nil)).Elem()
}

// A collection of values returned by getWebhook.
type GetWebhookResultOutput struct{ *pulumi.OutputState }

func (GetWebhookResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWebhookResult)(nil)).Elem()
}

func (o GetWebhookResultOutput) ToGetWebhookResultOutput() GetWebhookResultOutput {
	return o
}

func (o GetWebhookResultOutput) ToGetWebhookResultOutputWithContext(ctx context.Context) GetWebhookResultOutput {
	return o
}

func (o GetWebhookResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetWebhookResult] {
	return pulumix.Output[GetWebhookResult]{
		OutputState: o.OutputState,
	}
}

// Boolean, if set to true, webhooks are immediately sent in response to events
func (o GetWebhookResultOutput) Active() pulumi.BoolOutput {
	return o.ApplyT(func(v GetWebhookResult) bool { return v.Active }).(pulumi.BoolOutput)
}

// The webhook creation timestamp
func (o GetWebhookResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetWebhookResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The ID of the user who created the webhook.
func (o GetWebhookResultOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetWebhookResult) string { return v.CreatedBy }).(pulumi.StringOutput)
}

// The array of event types
func (o GetWebhookResultOutput) Events() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetWebhookResult) []string { return v.Events }).(pulumi.StringArrayOutput)
}

// The group ID
func (o GetWebhookResultOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetWebhookResult) string { return v.GroupId }).(pulumi.StringOutput)
}

// The webhook ID
func (o GetWebhookResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetWebhookResult) string { return v.Id }).(pulumi.StringOutput)
}

// Specifies whether the setup tests should be run
func (o GetWebhookResultOutput) RunTests() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetWebhookResult) *bool { return v.RunTests }).(pulumi.BoolPtrOutput)
}

// The secret string used for payload signing and masked in the response.
func (o GetWebhookResultOutput) Secret() pulumi.StringOutput {
	return o.ApplyT(func(v GetWebhookResult) string { return v.Secret }).(pulumi.StringOutput)
}

// The webhook type (group, account)
func (o GetWebhookResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetWebhookResult) string { return v.Type }).(pulumi.StringOutput)
}

// Your webhooks URL endpoint for your application
func (o GetWebhookResultOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetWebhookResult) string { return v.Url }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetWebhookResultOutput{})
}
