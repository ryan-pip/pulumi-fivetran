// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fivetran

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
	"github.com/ryan-pip/pulumi-fivetran/sdk/go/fivetran/internal"
)

// This data source returns a list of information about all users within a group in your Fivetran account.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/ryan-pip/pulumi-fivetran/sdk/go/fivetran"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fivetran.GetGroupUsers(ctx, &fivetran.GetGroupUsersArgs{
//				Id: "anonymous_mystery",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetGroupUsers(ctx *pulumi.Context, args *GetGroupUsersArgs, opts ...pulumi.InvokeOption) (*GetGroupUsersResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetGroupUsersResult
	err := ctx.Invoke("fivetran:index/getGroupUsers:getGroupUsers", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGroupUsers.
type GetGroupUsersArgs struct {
	// The unique identifier for the group within the Fivetran system. Data-source will represent a set of users who has membership in this group.
	Id    string              `pulumi:"id"`
	Users []GetGroupUsersUser `pulumi:"users"`
}

// A collection of values returned by getGroupUsers.
type GetGroupUsersResult struct {
	// The unique identifier for the group within the Fivetran system. Data-source will represent a set of users who has membership in this group.
	Id    string              `pulumi:"id"`
	Users []GetGroupUsersUser `pulumi:"users"`
}

func GetGroupUsersOutput(ctx *pulumi.Context, args GetGroupUsersOutputArgs, opts ...pulumi.InvokeOption) GetGroupUsersResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetGroupUsersResult, error) {
			args := v.(GetGroupUsersArgs)
			r, err := GetGroupUsers(ctx, &args, opts...)
			var s GetGroupUsersResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetGroupUsersResultOutput)
}

// A collection of arguments for invoking getGroupUsers.
type GetGroupUsersOutputArgs struct {
	// The unique identifier for the group within the Fivetran system. Data-source will represent a set of users who has membership in this group.
	Id    pulumi.StringInput          `pulumi:"id"`
	Users GetGroupUsersUserArrayInput `pulumi:"users"`
}

func (GetGroupUsersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupUsersArgs)(nil)).Elem()
}

// A collection of values returned by getGroupUsers.
type GetGroupUsersResultOutput struct{ *pulumi.OutputState }

func (GetGroupUsersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupUsersResult)(nil)).Elem()
}

func (o GetGroupUsersResultOutput) ToGetGroupUsersResultOutput() GetGroupUsersResultOutput {
	return o
}

func (o GetGroupUsersResultOutput) ToGetGroupUsersResultOutputWithContext(ctx context.Context) GetGroupUsersResultOutput {
	return o
}

func (o GetGroupUsersResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetGroupUsersResult] {
	return pulumix.Output[GetGroupUsersResult]{
		OutputState: o.OutputState,
	}
}

// The unique identifier for the group within the Fivetran system. Data-source will represent a set of users who has membership in this group.
func (o GetGroupUsersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupUsersResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetGroupUsersResultOutput) Users() GetGroupUsersUserArrayOutput {
	return o.ApplyT(func(v GetGroupUsersResult) []GetGroupUsersUser { return v.Users }).(GetGroupUsersUserArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetGroupUsersResultOutput{})
}
