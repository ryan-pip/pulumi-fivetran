// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fivetran

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
	"github.com/ryan-pip/pulumi-fivetran/sdk/go/fivetran/internal"
)

// This data source returns a dbt Transformation object.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/ryan-pip/pulumi-fivetran/sdk/go/fivetran"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fivetran.GetDbtTransformation(ctx, &fivetran.GetDbtTransformationArgs{
//				Id: "transformation_id",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDbtTransformation(ctx *pulumi.Context, args *GetDbtTransformationArgs, opts ...pulumi.InvokeOption) (*GetDbtTransformationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDbtTransformationResult
	err := ctx.Invoke("fivetran:index/getDbtTransformation:getDbtTransformation", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDbtTransformation.
type GetDbtTransformationArgs struct {
	// The ID of this resource.
	Id string `pulumi:"id"`
}

// A collection of values returned by getDbtTransformation.
type GetDbtTransformationResult struct {
	// Identifiers of related connectors.
	ConnectorIds []string `pulumi:"connectorIds"`
	// The timestamp of the dbt Transformation creation.
	CreatedAt string `pulumi:"createdAt"`
	// The unique identifier for the dbt Model within the Fivetran system.
	DbtModelId string `pulumi:"dbtModelId"`
	// Target dbt Model name.
	DbtModelName string `pulumi:"dbtModelName"`
	// The unique identifier for the dbt Project within the Fivetran system.
	DbtProjectId string `pulumi:"dbtProjectId"`
	// The ID of this resource.
	Id string `pulumi:"id"`
	// Identifiers of related models.
	ModelIds []string `pulumi:"modelIds"`
	// The dbt Model name.
	OutputModelName string `pulumi:"outputModelName"`
	// The field indicating whether the transformation will be created in paused state. By default, the value is false.
	Paused bool `pulumi:"paused"`
	// The field indicating whether the tests have been configured for dbt Transformation. By default, the value is false.
	RunTests bool `pulumi:"runTests"`
	// dbt Transformation schedule parameters.
	Schedules []GetDbtTransformationSchedule `pulumi:"schedules"`
}

func GetDbtTransformationOutput(ctx *pulumi.Context, args GetDbtTransformationOutputArgs, opts ...pulumi.InvokeOption) GetDbtTransformationResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDbtTransformationResult, error) {
			args := v.(GetDbtTransformationArgs)
			r, err := GetDbtTransformation(ctx, &args, opts...)
			var s GetDbtTransformationResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDbtTransformationResultOutput)
}

// A collection of arguments for invoking getDbtTransformation.
type GetDbtTransformationOutputArgs struct {
	// The ID of this resource.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetDbtTransformationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDbtTransformationArgs)(nil)).Elem()
}

// A collection of values returned by getDbtTransformation.
type GetDbtTransformationResultOutput struct{ *pulumi.OutputState }

func (GetDbtTransformationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDbtTransformationResult)(nil)).Elem()
}

func (o GetDbtTransformationResultOutput) ToGetDbtTransformationResultOutput() GetDbtTransformationResultOutput {
	return o
}

func (o GetDbtTransformationResultOutput) ToGetDbtTransformationResultOutputWithContext(ctx context.Context) GetDbtTransformationResultOutput {
	return o
}

func (o GetDbtTransformationResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetDbtTransformationResult] {
	return pulumix.Output[GetDbtTransformationResult]{
		OutputState: o.OutputState,
	}
}

// Identifiers of related connectors.
func (o GetDbtTransformationResultOutput) ConnectorIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDbtTransformationResult) []string { return v.ConnectorIds }).(pulumi.StringArrayOutput)
}

// The timestamp of the dbt Transformation creation.
func (o GetDbtTransformationResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbtTransformationResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The unique identifier for the dbt Model within the Fivetran system.
func (o GetDbtTransformationResultOutput) DbtModelId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbtTransformationResult) string { return v.DbtModelId }).(pulumi.StringOutput)
}

// Target dbt Model name.
func (o GetDbtTransformationResultOutput) DbtModelName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbtTransformationResult) string { return v.DbtModelName }).(pulumi.StringOutput)
}

// The unique identifier for the dbt Project within the Fivetran system.
func (o GetDbtTransformationResultOutput) DbtProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbtTransformationResult) string { return v.DbtProjectId }).(pulumi.StringOutput)
}

// The ID of this resource.
func (o GetDbtTransformationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbtTransformationResult) string { return v.Id }).(pulumi.StringOutput)
}

// Identifiers of related models.
func (o GetDbtTransformationResultOutput) ModelIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDbtTransformationResult) []string { return v.ModelIds }).(pulumi.StringArrayOutput)
}

// The dbt Model name.
func (o GetDbtTransformationResultOutput) OutputModelName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbtTransformationResult) string { return v.OutputModelName }).(pulumi.StringOutput)
}

// The field indicating whether the transformation will be created in paused state. By default, the value is false.
func (o GetDbtTransformationResultOutput) Paused() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDbtTransformationResult) bool { return v.Paused }).(pulumi.BoolOutput)
}

// The field indicating whether the tests have been configured for dbt Transformation. By default, the value is false.
func (o GetDbtTransformationResultOutput) RunTests() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDbtTransformationResult) bool { return v.RunTests }).(pulumi.BoolOutput)
}

// dbt Transformation schedule parameters.
func (o GetDbtTransformationResultOutput) Schedules() GetDbtTransformationScheduleArrayOutput {
	return o.ApplyT(func(v GetDbtTransformationResult) []GetDbtTransformationSchedule { return v.Schedules }).(GetDbtTransformationScheduleArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDbtTransformationResultOutput{})
}
