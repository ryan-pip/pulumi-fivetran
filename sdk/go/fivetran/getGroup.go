// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fivetran

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
	"github.com/ryan-pip/pulumi-fivetran/sdk/go/fivetran/internal"
)

// This data source returns a group object.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/ryan-pip/pulumi-fivetran/sdk/go/fivetran"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fivetran.GetGroup(ctx, &fivetran.GetGroupArgs{
//				Id: "anonymous_mystery",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetGroup(ctx *pulumi.Context, args *GetGroupArgs, opts ...pulumi.InvokeOption) (*GetGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetGroupResult
	err := ctx.Invoke("fivetran:index/getGroup:getGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGroup.
type GetGroupArgs struct {
	// The unique identifier for the group within the Fivetran system.
	Id string `pulumi:"id"`
}

// A collection of values returned by getGroup.
type GetGroupResult struct {
	// The timestamp of when the group was created in your account.
	CreatedAt string `pulumi:"createdAt"`
	// The unique identifier for the group within the Fivetran system.
	Id string `pulumi:"id"`
	// The name of the group within your account.
	Name string `pulumi:"name"`
}

func GetGroupOutput(ctx *pulumi.Context, args GetGroupOutputArgs, opts ...pulumi.InvokeOption) GetGroupResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetGroupResult, error) {
			args := v.(GetGroupArgs)
			r, err := GetGroup(ctx, &args, opts...)
			var s GetGroupResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetGroupResultOutput)
}

// A collection of arguments for invoking getGroup.
type GetGroupOutputArgs struct {
	// The unique identifier for the group within the Fivetran system.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupArgs)(nil)).Elem()
}

// A collection of values returned by getGroup.
type GetGroupResultOutput struct{ *pulumi.OutputState }

func (GetGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupResult)(nil)).Elem()
}

func (o GetGroupResultOutput) ToGetGroupResultOutput() GetGroupResultOutput {
	return o
}

func (o GetGroupResultOutput) ToGetGroupResultOutputWithContext(ctx context.Context) GetGroupResultOutput {
	return o
}

func (o GetGroupResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetGroupResult] {
	return pulumix.Output[GetGroupResult]{
		OutputState: o.OutputState,
	}
}

// The timestamp of when the group was created in your account.
func (o GetGroupResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The unique identifier for the group within the Fivetran system.
func (o GetGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the group within your account.
func (o GetGroupResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupResult) string { return v.Name }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetGroupResultOutput{})
}
